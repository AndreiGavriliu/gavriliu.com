<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kubernetes on Andrei Gavriliu</title>
    <link>https://gavriliu.com/series/kubernetes/</link>
    <description>Recent content in Kubernetes on Andrei Gavriliu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 13 May 2025 03:00:00 +0200</lastBuildDate><atom:link href="https://gavriliu.com/series/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kubernetes Ingress: 7 Common Mistakes (and How to Avoid Them)</title>
      <link>https://gavriliu.com/post/2025/05/13/kubernetes-ingress-7-common-mistakes-and-how-to-avoid-them/</link>
      <pubDate>Tue, 13 May 2025 03:00:00 +0200</pubDate>
      
      <guid>https://gavriliu.com/post/2025/05/13/kubernetes-ingress-7-common-mistakes-and-how-to-avoid-them/</guid>
      <description>
        
          
            &lt;p&gt;You&#39;ve finally tamed Kubernetes Ingress â€” or so you think. Then weird routing errors, downtime, and mysterious 404s show up. Welcome to the club! ðŸŽ©&lt;/p&gt;
&lt;p&gt;Let&#39;s save you some headaches. Here are &lt;strong&gt;7 common Kubernetes Ingress mistakes&lt;/strong&gt;, how they happen, and how to dodge them like a pro.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;quick-mistakes-checklist&#34;&gt;Quick Mistakes Checklist&lt;/h2&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Mistake&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Symptom&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Quick Fix&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;No Ingress Controller&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;No traffic reaching apps&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Install a controller (NGINX, Traefik, etc.)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Mixing Path and Host&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Wrong backend routing&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Match host &lt;strong&gt;then&lt;/strong&gt; path properly&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Missing PathType&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Paths don&#39;t match&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Set &lt;code&gt;pathType: Prefix&lt;/code&gt; or &lt;code&gt;Exact&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;TLS Failures&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;HTTPS broken&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Create &amp;amp; reference correct TLS Secret&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Missing IngressClass&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Ingress ignored&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Set &lt;code&gt;spec.ingressClassName&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Backend Service Issues&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;502/503 errors&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Verify Service names, ports, selectors&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Health Check Problems&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;504 Gateway Timeout&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Add &lt;code&gt;/health&lt;/code&gt;, tune timeouts&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3 id=&#34;forgetting-to-deploy-an-ingress-controller&#34;&gt;Forgetting to Deploy an Ingress Controller&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Symptom:&lt;/strong&gt;&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Kubernetes Ingress: Your Cluster&#39;s Traffic Director</title>
      <link>https://gavriliu.com/post/2025/05/06/kubernetes-ingress-your-clusters-traffic-director/</link>
      <pubDate>Tue, 06 May 2025 03:00:00 +0200</pubDate>
      
      <guid>https://gavriliu.com/post/2025/05/06/kubernetes-ingress-your-clusters-traffic-director/</guid>
      <description>
        
          
            &lt;p&gt;Your app is running in Kubernetes. Great! But now you want users to actually reach it â€” without remembering 15 different NodePorts or manually messing with LoadBalancers. Enter the hero we need but rarely understand at first: &lt;strong&gt;Ingress&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Today, weâ€™re breaking down what Ingresses are, how they work, and how they can route traffic like air traffic controllers on espresso.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;what-is-an-ingress&#34;&gt;What Is an Ingress?&lt;/h2&gt;
&lt;p&gt;An &lt;strong&gt;Ingress&lt;/strong&gt; is a Kubernetes resource that &lt;strong&gt;manages external access&lt;/strong&gt; to your services, typically over HTTP(S).&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Kubernetes Services: The Network Matchmakers</title>
      <link>https://gavriliu.com/post/2025/04/29/kubernetes-services-the-network-matchmakers/</link>
      <pubDate>Tue, 29 Apr 2025 08:30:35 +0200</pubDate>
      
      <guid>https://gavriliu.com/post/2025/04/29/kubernetes-services-the-network-matchmakers/</guid>
      <description>
        
          
            &lt;p&gt;So youâ€™ve got Pods doing great things â€” calculating, serving, storing, or maybe just vibing. But how do they talk to each other, or to the outside world? Enter &lt;strong&gt;Kubernetes Services&lt;/strong&gt; â€” the built-in matchmakers making sure traffic finds the right Pods without ghosting.&lt;/p&gt;
&lt;p&gt;Letâ€™s unravel all the types of Services, how they work, and when to use which one â€” in plain speak, with a splash of professional sarcasm.&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Kubernetes StatefulSets: Because Some Pods Need to Remember Things</title>
      <link>https://gavriliu.com/post/2025/04/22/kubernetes-statefulsets-because-some-pods-need-to-remember-things/</link>
      <pubDate>Tue, 22 Apr 2025 08:30:35 +0200</pubDate>
      
      <guid>https://gavriliu.com/post/2025/04/22/kubernetes-statefulsets-because-some-pods-need-to-remember-things/</guid>
      <description>
        
          
            &lt;p&gt;Youâ€™ve learned about Deployments, and now youâ€™re deploying stateless apps like a boss. But then you hit a wall - maybe itâ€™s a database, a cache, or something that &lt;em&gt;cares&lt;/em&gt; about identity and storage. Enter: &lt;strong&gt;StatefulSets&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;StatefulSets are like that one friend who always insists on sitting in the same seat - and gets mad if they can&#39;t.&lt;/p&gt;
&lt;h2 id=&#34;what-is-a-statefulset&#34;&gt;What is a StatefulSet?&lt;/h2&gt;
&lt;p&gt;A &lt;strong&gt;StatefulSet&lt;/strong&gt; is a Kubernetes controller used to manage stateful applications. Unlike Deployments, StatefulSets:&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Kubernetes Deployments: Like a Boss (Who Delegates Everything)</title>
      <link>https://gavriliu.com/post/2025/04/17/kubernetes-deployments-like-a-boss-who-delegates-everything/</link>
      <pubDate>Thu, 17 Apr 2025 08:30:35 +0200</pubDate>
      
      <guid>https://gavriliu.com/post/2025/04/17/kubernetes-deployments-like-a-boss-who-delegates-everything/</guid>
      <description>
        
          
            &lt;p&gt;So youâ€™ve heard about Kubernetes and now youâ€™re swimming in YAML like itâ€™s alphabet soup. Letâ€™s break down one of its most useful concepts - the almighty &lt;strong&gt;Deployment&lt;/strong&gt; - and figure out how it works without having to learn an arcane spellbook.&lt;/p&gt;
&lt;h2 id=&#34;whats-a-deployment-anyway&#34;&gt;Whatâ€™s a Deployment, Anyway?&lt;/h2&gt;
&lt;p&gt;A Kubernetes &lt;strong&gt;Deployment&lt;/strong&gt; is like your project manager. It doesnâ€™t do the actual work (that&#39;s what Pods are for), but it makes sure your app:&lt;/p&gt;
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
