<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Learn on Andrei Gavriliu</title>
    <link>https://gavriliu.com/tags/learn/</link>
    <description>Recent content in Learn on Andrei Gavriliu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 10 Jun 2025 03:00:00 +0200</lastBuildDate><atom:link href="https://gavriliu.com/tags/learn/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kubernetes Pod Affinity and Anti-Affinity: Scheduling With Style</title>
      <link>https://gavriliu.com/post/2025/06/10/kubernetes-pod-affinity-and-anti-affinity-scheduling-with-style/</link>
      <pubDate>Tue, 10 Jun 2025 03:00:00 +0200</pubDate>
      
      <guid>https://gavriliu.com/post/2025/06/10/kubernetes-pod-affinity-and-anti-affinity-scheduling-with-style/</guid>
      <description>
        
          
            &lt;p&gt;Imagine Kubernetes as a big party where pods are the guests. Some guests (pods) want to sit together ‚Äî they‚Äôre best friends! Others‚Ä¶ well, they‚Äôd rather not be anywhere near each other. Kubernetes, being the polite party host it is, lets you manage these social dynamics using Pod Affinity and Pod Anti-Affinity.&lt;/p&gt;
&lt;h2 id=&#34;what-is-pod-affinity&#34;&gt;What Is Pod Affinity?&lt;/h2&gt;
&lt;p&gt;Pod Affinity lets you tell the scheduler: ‚Äú&lt;em&gt;Hey, I want my pod to be placed on the same node (or zone) as another pod ‚Äî they get along.&lt;/em&gt;‚Äù&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Kubernetes RBAC: Who Can Do What, and Where?</title>
      <link>https://gavriliu.com/post/2025/06/03/kubernetes-rbac-roles-bindings/</link>
      <pubDate>Tue, 03 Jun 2025 03:00:00 +0200</pubDate>
      
      <guid>https://gavriliu.com/post/2025/06/03/kubernetes-rbac-roles-bindings/</guid>
      <description>
        
          
            &lt;p&gt;Let‚Äôs be honest: giving everyone admin access to your cluster is fast‚Ä¶ until it isn‚Äôt. Enter &lt;strong&gt;RBAC&lt;/strong&gt;, short for &lt;strong&gt;Role-Based Access Control&lt;/strong&gt;‚ÄîKubernetes‚Äô way of saying ‚Äúhold up, who let you in here?‚Äù&lt;/p&gt;
&lt;p&gt;RBAC defines &lt;strong&gt;who&lt;/strong&gt; can perform &lt;strong&gt;what actions&lt;/strong&gt; on &lt;strong&gt;which resources&lt;/strong&gt;‚Äîlike a VIP list for your Kubernetes API server.&lt;/p&gt;
&lt;h2 id=&#34;what-is-rbac&#34;&gt;What Is RBAC?&lt;/h2&gt;
&lt;p&gt;RBAC in Kubernetes is all about permissions. It answers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Who&lt;/strong&gt; is making the request? (a user, group, or service account)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;What&lt;/strong&gt; are they trying to do? (e.g., list pods, delete deployments)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Where&lt;/strong&gt; are they trying to do it? (namespace or cluster)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;RBAC is made up of four core objects:&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Kubernetes Endpoints &amp; EndpointSlices: Who‚Äôs Really Behind That Service?</title>
      <link>https://gavriliu.com/post/2025/05/27/kubernetes-endpoints-endpointslices/</link>
      <pubDate>Tue, 27 May 2025 03:00:00 +0200</pubDate>
      
      <guid>https://gavriliu.com/post/2025/05/27/kubernetes-endpoints-endpointslices/</guid>
      <description>
        
          
            &lt;h2 id=&#34;what-are-endpoints&#34;&gt;What Are Endpoints?&lt;/h2&gt;
&lt;p&gt;Ever wondered how a &lt;code&gt;Service&lt;/code&gt; in Kubernetes actually knows which pods to forward traffic to? Enter the &lt;strong&gt;Endpoint&lt;/strong&gt;, Kubernetes‚Äô behind-the-scenes phonebook.&lt;/p&gt;
&lt;p&gt;When you create a &lt;code&gt;Service&lt;/code&gt;, Kubernetes auto-generates an &lt;code&gt;Endpoint&lt;/code&gt; object. It‚Äôs a simple list of pod IPs and ports that match the &lt;code&gt;Service&lt;/code&gt;‚Äôs selector. Basically:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;‚ÄúHey Service X, your pods are at 10.42.0.12:8080 and 10.42.0.15:8080. Go get ‚Äòem, tiger.‚Äù&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;You can check them out with:&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Kubernetes Network Policies: Your Cluster‚Äôs Traffic Bouncer</title>
      <link>https://gavriliu.com/post/2025/05/20/kubernetes-network-policies-your-cluster-s-traffic-bouncer/</link>
      <pubDate>Tue, 20 May 2025 03:00:00 +0200</pubDate>
      
      <guid>https://gavriliu.com/post/2025/05/20/kubernetes-network-policies-your-cluster-s-traffic-bouncer/</guid>
      <description>
        
          
            &lt;h2 id=&#34;what-are-network-policies&#34;&gt;What Are Network Policies?&lt;/h2&gt;
&lt;p&gt;In Kubernetes, a &lt;code&gt;NetworkPolicy&lt;/code&gt; is like a bouncer for your pods. It checks who‚Äôs allowed to talk to whom and kicks out anything not on the guest list.&lt;/p&gt;
&lt;p&gt;By default, Kubernetes is a friendly party where everyone can chat with everyone else‚Äîgreat for sociability, terrible for security. Network Policies let you enforce boundaries, like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Only letting frontend pods sweet-talk the backend&lt;/li&gt;
&lt;li&gt;Blocking pods from gossiping with the internet&lt;/li&gt;
&lt;li&gt;Keeping your top-secret service away from curious neighbors&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/services-networking/network-policies/&#34;&gt;Official Docs&lt;/a&gt;&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Kubernetes Ingress: 7 Common Mistakes (and How to Avoid Them)</title>
      <link>https://gavriliu.com/post/2025/05/13/kubernetes-ingress-7-common-mistakes-and-how-to-avoid-them/</link>
      <pubDate>Tue, 13 May 2025 03:00:00 +0200</pubDate>
      
      <guid>https://gavriliu.com/post/2025/05/13/kubernetes-ingress-7-common-mistakes-and-how-to-avoid-them/</guid>
      <description>
        
          
            &lt;p&gt;You&#39;ve finally tamed Kubernetes Ingress ‚Äî or so you think. Then weird routing errors, downtime, and mysterious 404s show up. Welcome to the club! üé©&lt;/p&gt;
&lt;p&gt;Let&#39;s save you some headaches. Here are &lt;strong&gt;7 common Kubernetes Ingress mistakes&lt;/strong&gt;, how they happen, and how to dodge them like a pro.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;quick-mistakes-checklist&#34;&gt;Quick Mistakes Checklist&lt;/h2&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Mistake&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Symptom&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Quick Fix&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;No Ingress Controller&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;No traffic reaching apps&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Install a controller (NGINX, Traefik, etc.)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Mixing Path and Host&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Wrong backend routing&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Match host &lt;strong&gt;then&lt;/strong&gt; path properly&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Missing PathType&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Paths don&#39;t match&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Set &lt;code&gt;pathType: Prefix&lt;/code&gt; or &lt;code&gt;Exact&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;TLS Failures&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;HTTPS broken&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Create &amp;amp; reference correct TLS Secret&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Missing IngressClass&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Ingress ignored&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Set &lt;code&gt;spec.ingressClassName&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Backend Service Issues&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;502/503 errors&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Verify Service names, ports, selectors&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Health Check Problems&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;504 Gateway Timeout&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Add &lt;code&gt;/health&lt;/code&gt;, tune timeouts&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3 id=&#34;forgetting-to-deploy-an-ingress-controller&#34;&gt;Forgetting to Deploy an Ingress Controller&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Symptom:&lt;/strong&gt;&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Kubernetes Ingress: Your Cluster&#39;s Traffic Director</title>
      <link>https://gavriliu.com/post/2025/05/06/kubernetes-ingress-your-clusters-traffic-director/</link>
      <pubDate>Tue, 06 May 2025 03:00:00 +0200</pubDate>
      
      <guid>https://gavriliu.com/post/2025/05/06/kubernetes-ingress-your-clusters-traffic-director/</guid>
      <description>
        
          
            &lt;p&gt;Your app is running in Kubernetes. Great! But now you want users to actually reach it ‚Äî without remembering 15 different NodePorts or manually messing with LoadBalancers. Enter the hero we need but rarely understand at first: &lt;strong&gt;Ingress&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Today, we‚Äôre breaking down what Ingresses are, how they work, and how they can route traffic like air traffic controllers on espresso.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;what-is-an-ingress&#34;&gt;What Is an Ingress?&lt;/h2&gt;
&lt;p&gt;An &lt;strong&gt;Ingress&lt;/strong&gt; is a Kubernetes resource that &lt;strong&gt;manages external access&lt;/strong&gt; to your services, typically over HTTP(S).&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Kubernetes Services: The Network Matchmakers</title>
      <link>https://gavriliu.com/post/2025/04/29/kubernetes-services-the-network-matchmakers/</link>
      <pubDate>Tue, 29 Apr 2025 08:30:35 +0200</pubDate>
      
      <guid>https://gavriliu.com/post/2025/04/29/kubernetes-services-the-network-matchmakers/</guid>
      <description>
        
          
            &lt;p&gt;So you‚Äôve got Pods doing great things ‚Äî calculating, serving, storing, or maybe just vibing. But how do they talk to each other, or to the outside world? Enter &lt;strong&gt;Kubernetes Services&lt;/strong&gt; ‚Äî the built-in matchmakers making sure traffic finds the right Pods without ghosting.&lt;/p&gt;
&lt;p&gt;Let‚Äôs unravel all the types of Services, how they work, and when to use which one ‚Äî in plain speak, with a splash of professional sarcasm.&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Kubernetes StatefulSets: Because Some Pods Need to Remember Things</title>
      <link>https://gavriliu.com/post/2025/04/22/kubernetes-statefulsets-because-some-pods-need-to-remember-things/</link>
      <pubDate>Tue, 22 Apr 2025 08:30:35 +0200</pubDate>
      
      <guid>https://gavriliu.com/post/2025/04/22/kubernetes-statefulsets-because-some-pods-need-to-remember-things/</guid>
      <description>
        
          
            &lt;p&gt;You‚Äôve learned about Deployments, and now you‚Äôre deploying stateless apps like a boss. But then you hit a wall - maybe it‚Äôs a database, a cache, or something that &lt;em&gt;cares&lt;/em&gt; about identity and storage. Enter: &lt;strong&gt;StatefulSets&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;StatefulSets are like that one friend who always insists on sitting in the same seat - and gets mad if they can&#39;t.&lt;/p&gt;
&lt;h2 id=&#34;what-is-a-statefulset&#34;&gt;What is a StatefulSet?&lt;/h2&gt;
&lt;p&gt;A &lt;strong&gt;StatefulSet&lt;/strong&gt; is a Kubernetes controller used to manage stateful applications. Unlike Deployments, StatefulSets:&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Kubernetes Deployments: Like a Boss (Who Delegates Everything)</title>
      <link>https://gavriliu.com/post/2025/04/17/kubernetes-deployments-like-a-boss-who-delegates-everything/</link>
      <pubDate>Thu, 17 Apr 2025 08:30:35 +0200</pubDate>
      
      <guid>https://gavriliu.com/post/2025/04/17/kubernetes-deployments-like-a-boss-who-delegates-everything/</guid>
      <description>
        
          
            &lt;p&gt;So you‚Äôve heard about Kubernetes and now you‚Äôre swimming in YAML like it‚Äôs alphabet soup. Let‚Äôs break down one of its most useful concepts - the almighty &lt;strong&gt;Deployment&lt;/strong&gt; - and figure out how it works without having to learn an arcane spellbook.&lt;/p&gt;
&lt;h2 id=&#34;whats-a-deployment-anyway&#34;&gt;What‚Äôs a Deployment, Anyway?&lt;/h2&gt;
&lt;p&gt;A Kubernetes &lt;strong&gt;Deployment&lt;/strong&gt; is like your project manager. It doesn‚Äôt do the actual work (that&#39;s what Pods are for), but it makes sure your app:&lt;/p&gt;
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
