<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Security on Andrei Gavriliu</title>
    <link>https://gavriliu.com/tags/security/</link>
    <description>Recent content in Security on Andrei Gavriliu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 03 Jun 2025 03:00:00 +0200</lastBuildDate><atom:link href="https://gavriliu.com/tags/security/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kubernetes RBAC: Who Can Do What, and Where?</title>
      <link>https://gavriliu.com/post/2025/06/03/kubernetes-rbac-roles-bindings/</link>
      <pubDate>Tue, 03 Jun 2025 03:00:00 +0200</pubDate>
      
      <guid>https://gavriliu.com/post/2025/06/03/kubernetes-rbac-roles-bindings/</guid>
      <description>
        
          
            &lt;p&gt;Let’s be honest: giving everyone admin access to your cluster is fast… until it isn’t. Enter &lt;strong&gt;RBAC&lt;/strong&gt;, short for &lt;strong&gt;Role-Based Access Control&lt;/strong&gt;—Kubernetes’ way of saying “hold up, who let you in here?”&lt;/p&gt;
&lt;p&gt;RBAC defines &lt;strong&gt;who&lt;/strong&gt; can perform &lt;strong&gt;what actions&lt;/strong&gt; on &lt;strong&gt;which resources&lt;/strong&gt;—like a VIP list for your Kubernetes API server.&lt;/p&gt;
&lt;h2 id=&#34;what-is-rbac&#34;&gt;What Is RBAC?&lt;/h2&gt;
&lt;p&gt;RBAC in Kubernetes is all about permissions. It answers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Who&lt;/strong&gt; is making the request? (a user, group, or service account)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;What&lt;/strong&gt; are they trying to do? (e.g., list pods, delete deployments)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Where&lt;/strong&gt; are they trying to do it? (namespace or cluster)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;RBAC is made up of four core objects:&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Kubernetes Network Policies: Your Cluster’s Traffic Bouncer</title>
      <link>https://gavriliu.com/post/2025/05/20/kubernetes-network-policies-your-cluster-s-traffic-bouncer/</link>
      <pubDate>Tue, 20 May 2025 03:00:00 +0200</pubDate>
      
      <guid>https://gavriliu.com/post/2025/05/20/kubernetes-network-policies-your-cluster-s-traffic-bouncer/</guid>
      <description>
        
          
            &lt;h2 id=&#34;what-are-network-policies&#34;&gt;What Are Network Policies?&lt;/h2&gt;
&lt;p&gt;In Kubernetes, a &lt;code&gt;NetworkPolicy&lt;/code&gt; is like a bouncer for your pods. It checks who’s allowed to talk to whom and kicks out anything not on the guest list.&lt;/p&gt;
&lt;p&gt;By default, Kubernetes is a friendly party where everyone can chat with everyone else—great for sociability, terrible for security. Network Policies let you enforce boundaries, like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Only letting frontend pods sweet-talk the backend&lt;/li&gt;
&lt;li&gt;Blocking pods from gossiping with the internet&lt;/li&gt;
&lt;li&gt;Keeping your top-secret service away from curious neighbors&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/services-networking/network-policies/&#34;&gt;Official Docs&lt;/a&gt;&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>How to seal and unseal secrets with Bitnami Sealed-Secrets</title>
      <link>https://gavriliu.com/post/2025/03/14/how-to-seal-and-unseal-secrets-with-bitnami-sealed-secrets/</link>
      <pubDate>Fri, 14 Mar 2025 16:41:25 +0100</pubDate>
      
      <guid>https://gavriliu.com/post/2025/03/14/how-to-seal-and-unseal-secrets-with-bitnami-sealed-secrets/</guid>
      <description>
        
          
            &lt;p&gt;I decided to push my Kubernetes manifests to GitHub because running Git locally on the same k3s cluster as ArgoCD seemed like asking for trouble. I mean, what happens if something goes wrong?&lt;br&gt;&lt;/p&gt;
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
