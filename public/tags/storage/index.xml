<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Storage on Andrei Gavriliu</title>
    <link>https://gavriliu.com/tags/storage/</link>
    <description>Recent content in Storage on Andrei Gavriliu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 03 Jun 2025 03:00:00 +0200</lastBuildDate><atom:link href="https://gavriliu.com/tags/storage/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kubernetes Volumes: Where Pods Keep Their Stuff</title>
      <link>https://gavriliu.com/post/2025/06/17/kubernetes-volumes-where-pods-keep-their-stuff/</link>
      <pubDate>Tue, 03 Jun 2025 03:00:00 +0200</pubDate>
      
      <guid>https://gavriliu.com/post/2025/06/17/kubernetes-volumes-where-pods-keep-their-stuff/</guid>
      <description>
        
          
            &lt;p&gt;&lt;em&gt;Or: “How to Give Your Containers a Place to Put Their Shoes”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In the beginning, there was the container. And it was stateless. Ephemeral. Disposable. Like a temporary pop-up tent in the cloud. But then… someone said, “Hey, where do I put my logs? My files? My database?”&lt;/p&gt;
&lt;p&gt;Enter &lt;strong&gt;Kubernetes Volumes&lt;/strong&gt; — the answer to the age-old question: &lt;em&gt;“Where does my pod keep its stuff?”&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;why-volumes-matter-aka-the-tragic-tale-of-tmp&#34;&gt;Why Volumes Matter (a.k.a. The Tragic Tale of /tmp)&lt;/h2&gt;
&lt;p&gt;Let’s say you write a file in your container, and the pod restarts. Surprise! The file’s gone. That’s because containers are built for immutability. Any data written inside the container is gone when it crashes or gets rescheduled.&lt;/p&gt;
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
